name: CI

on:
  push:
    branches:
      - main
    tags:
      - "*"

jobs:
  # build:
  #   name: Build
  #   if: ${{ ! startsWith(github.ref, 'refs/tags/')}}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-java@v2
  #       with:
  #         distribution: "zulu"
  #         java-version: 17
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         flutter-version: "3.13.7"
  #     - run: flutter pub get
  #     - run: flutter build apk --release --target-platform=android-arm64 --no-shrink

  # apk:
  #   name: Generate APK
  #   if: startsWith(github.ref, 'refs/tags/')
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Setup JDK
  #       uses: actions/setup-java@v2
  #       with:
  #         distribution: "zulu"
  #         java-version: 17
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         flutter-version: "3.13.7"
  #     - run: flutter pub get
  #     - run: flutter build apk --release --target-platform=android-arm64 --no-shrink
  #     - name: Upload APK
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: apk
  #         path: build/app/outputs/apk/release/app-release.apk

  # release:
  #   name: Release APK
  #   needs: apk
  #   if: startsWith(github.ref, 'refs/tags/')
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download APK from build
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: apk
  #     - name: Display structure of downloaded files
  #       run: ls -R

  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1.1.4
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ github.ref }}
  #         release_name: ${{ github.ref }}
  #     - name: Upload Release APK
  #       id: upload_release_asset
  #       uses: actions/upload-release-asset@v1.0.1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./app-release.apk
  #         asset_name: app-release.apk
  #         asset_content_type: application/zip

  update:
    name: Update APK
    # needs: release
    # if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Connect to SSH
        uses: appleboy/ssh-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          envs: GITHUB_TOKEN
          script: |
            cd /home/lighthouse/project/xbb_start_server/public/
            bash auto.sh
